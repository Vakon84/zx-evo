Исходники плагинов:
PLUGWP.ASM - полноценный плагин WildPlayer'a
PLUG01.ASM - пример плагина (стартовый плагин)
PLUG02.ASM - ещё один пример

──────────────────────────────────────────────────────
вызов плагина производится простым CALL #8000
на входе в плагин передаётся:
[DE,HL] - длина файла в байтах
IX - адрес где находится структура активной панели (его нужно восстанавливать по выходу)

По выходу из плагина:
A=0 - просто выход
A=1 - файл не опознан, пусть забирают вьюверы/другой плагин
A=2 - перейти на следующий файл в каталоге

Формат заголовка (512b):
Offset│Len.│Description
──────┼────┼─────────────────────────
    +0│  16│reserved
──────┼────┼─────────────────────────
   +16│  16│"WildCommanderMDL"
──────┼────┼─────────────────────────
   +32│   1│Версия формата (#00)
──────┼────┼─────────────────────────
   +33│   1│Тип плагина
──────┼────┼─────────────────────────
   +34│   1│Количество страниц
──────┼────┼─────────────────────────
   +35│   1│reserved
──────┼────┼─────────────────────────
   +36│ 2*6│+0 - Номер страницы
      │    │+1 - Размер блока (512b)
──────┼────┼─────────────────────────
   +48│ 2*8│reserved
──────┼────┼─────────────────────────
   +64│3*32│блок расширений
      │    │"TXT", "WRD" и т.д.
──────┼────┼─────────────────────────
  +160│   1│#00
──────┼────┼─────────────────────────
  +161│   4│максимальный размер файла
      │    │(определяет, какие файлы
      │    │не нужно передавать)
──────┼────┼─────────────────────────
  +165│  32│Имя плагина
──────┼────┼─────────────────────────
  +197│ 315│reserved
──────┼────┼─────────────────────────


#6006 - точка доступа к функциям.
в A записывается номер функции которую нужно вызвать.
все остальные регистры указываются в описании функции.

основные функции:
──┌───────────────────────────────────────────────────
 0│MNGC_PL
  │включение страницы (из выделенного блока)
  │нумерация совпадает с использующейся в +36
  │i:A' - номер страницы
──┼───────────────────────────────────────────────────
 1│PRWOW
  │вывод окна на экран
  │i:IX - адрес по которому лежит структура окна (SOW)
──┼───────────────────────────────────────────────────
 2│RRESB
  │стирание окна (восстановление информации)
  │i:IX - SOW
──┼───────────────────────────────────────────────────
 3│PRSRW
  │печать строки в окне
  │i:IX - SOW
  │  HL - Text addres (должен быть ниже #C000!)
  │   D - Y
  │   E - X
  │  BC - Lenght
──┼───────────────────────────────────────────────────
 4│PRIAT
  │выставление цвета (вызывается сразу после PRSRW)
  │i:PRSRW - выставленные координаты и длина
  │     A' - цвет
──┼───────────────────────────────────────────────────
 5│GADRW
  │получение адреса в окне
  │i:IX - SOW
  │   D - Y
  │   E - X
  │o:HL - Address
──┼───────────────────────────────────────────────────
 6│CURSOR
  │печать курсора
  │i:IX - SOW
──┼───────────────────────────────────────────────────
 7│CURSER
  │стирание курсора (восстановление цвета)
  │i:IX - SOW
──┼───────────────────────────────────────────────────
 8│YN
  │меню ok/cancel
  │[описание будет пожже]
──┼───────────────────────────────────────────────────
 9│ISTR
  │строка ввода
  │[описание будет пожже]
──┼───────────────────────────────────────────────────
10│NORK
  │перевод байта в HEX (текстовый формат)
  │i:HL - Text Address
  │   A - Value
──┼───────────────────────────────────────────────────
15│GEDPL
  │восстановление паллитры, всех оффсетов и тхт режима
  │i:none
──┴───────────────────────────────────────────────────

опрос клавиатуры:
если возвращает NZ, то клавиша нажата.
──┌───────────────────────────────────────────────────
16│SPKE (SPACE)
──┼───────────────────────────────────────────────────
17│UPPP (UP Arrow)
──┼───────────────────────────────────────────────────
18│DWWW (Down Arrow)
──┼───────────────────────────────────────────────────
19│LFFF (Left Arrow)
──┼───────────────────────────────────────────────────
20│RGGG (Right Arrow)
──┼───────────────────────────────────────────────────
21│TABK (Tab)
──┼───────────────────────────────────────────────────
22│ENKE (Enter)
──┼───────────────────────────────────────────────────
23│ESC
──┼───────────────────────────────────────────────────
24│BSPC (Backspace)
──┼───────────────────────────────────────────────────
25│PGU (pgUP)
──┼───────────────────────────────────────────────────
26│PGD (pgDN)
──┼───────────────────────────────────────────────────
27│HOME
──┼───────────────────────────────────────────────────
28│END
──┴───────────────────────────────────────────────────

работа с файлами:
──┌───────────────────────────────────────────────────
48│LOAD512
  │потоковая загрузка файла
  │i:HL - Address
  │   B - Blocks (512b)
  │o:HL - New Value
──┼───────────────────────────────────────────────────
49│SAVE512
  │потоковая запись файла
  │i:HL - Address
  │   B - Blocks (512b)
  │o:HL - New Value
──┼───────────────────────────────────────────────────
50│GIPAGPL
  │позиционировать на начало файла
  │(сразу после запуска плагина оная уже вызвана)
──┼───────────────────────────────────────────────────
51│TENTRY
  │получить ENTRY(32) из коммандера
  │(структура как в каталоге FAT32)
  │i:    DE - Address
  │o:DE(32) - ENTRY
──┼───────────────────────────────────────────────────
52│CHTOSEP
  │разложение цепочки активного файла в сектора
  │i:DE - BUFFER (куда кидать номера секторов)
  │  BC - BUFFER END (=BUFFER+BUFFERlenght)
──┴───────────────────────────────────────────────────

работа с режимами графики:
──┌───────────────────────────────────────────────────
64│MNGV_PL
  │[описание будет пожже]
──┼───────────────────────────────────────────────────
65│MNGCVPL
  │[описание будет пожже]
──┼───────────────────────────────────────────────────
66│GVmod
  │[описание будет пожже]
──┼───────────────────────────────────────────────────
67│GYoff
  │[описание будет пожже]
──┼───────────────────────────────────────────────────
68│GXoff
  │[описание будет пожже]
──┴───────────────────────────────────────────────────
