
; ------- external modules
extern	font8


; ------- MACRO definitions
xt      macro port, val
        ld bc, port << 8 + extp
        ld a, val
        out (c), a
        endm


; ------- main code
rseg CODE
		jp MAIN
    
		org h'38
IM1:
		ei
		ret
		
		org h'66
NMI:
		retn
		
		org h'100
MAIN:
        di
        xt page1, h'05
        ld sp, stck
        
        call LOAD_NVRAM
        call CALC_CRC
        jr z, RESET
        
        call LOAD_DEFAULTS
        call SAVE_NVRAM
        jr SETUP
        
RESET:  
        
SETUP:       
        call CLS
        call LD_FONT
        call LD_S_PAL

        halt

        
; ------- subroutines
CALC_CRC:

        ld hl, nv_buf
        ld de, 0
        ld b, 62
CC0:
        ld a, d
        add a, (hl)
        ld d, a
        ld a, e
        xor (hl)
        ld e, a
        inc hl
        djnz CC0
        
        ld a, d
        cp (hl)
        ret nz
        inc hl
        ld a, e
        cp (hl)
        ret

LOAD_DEFAULTS:
        ld hl, nv_buf
        ld de, nv_buf + 1
        ld bc, h'003D
        ld (hl), b
        ldir
        ret
        
LOAD_NVRAM:
        ret
        
SAVE_NVRAM:
        call CALC_CRC
        ld (nv_buf + 62), de
        ret
        
LD_FONT:
        xt page3, h'FE
        ld hl, font8
        ld de, win3
        ld bc, h'4000
        ldir
        ret

CLS:        
        xt page3, h'FF
        ld hl, win3
        ld de, win3 + 1
        ld bc, h'3FFF
        ld (hl), 0
        ldir
        ret

LD_S_PAL:        
        
	
; ------- definitions
; -- NVRAM cells
cfrq:	equ h'B0
btto:	equ h'B1
l128:	equ h'B2
ayfr:	equ h'B3		
zpal:	equ h'B4		
		
; -- TSconf extended ports
extp:         equ h'AF

vconfig:      equ h'00
vpage:        equ h'01
xoffsl:       equ h'02
xoffsh:       equ h'03
yoffsl:       equ h'04
yoffsh:       equ h'05
tsconfig:     equ h'06
psel:         equ h'07
border:       equ h'0F

page0:        equ h'10
page1:        equ h'11
page2:        equ h'12
page3:        equ h'13
fmaddr:       equ h'15
tgpage:       equ h'18
dmasaddrl:    equ h'1A
dmasaddrh:    equ h'1B
dmasaddrx:    equ h'1C
dmadaddrl:    equ h'1D
dmadaddrh:    equ h'1E
dmadaddrx:    equ h'1F

sysconfig:    equ h'20
memconfig:    equ h'21
hsint:        equ h'22
vsintl:       equ h'23
vsinth:       equ h'24
intvect:      equ h'25
dmalen:       equ h'26
dmactrl:      equ h'27

; ------- addresses
win0:         equ h'0000
win1:         equ h'4000
win2:         equ h'8000
win3:         equ h'C000

nv_buf:       equ h'5B80
stck:         equ h'5BFF


; ------- tabs
; -- options tab
; word - address of option text
; word - address of option choises
OPTTAB:
		defw OPT0, SEL0
		defw OPT1, SEL1
		defw OPT2, SEL2
		defw OPT3, SEL3
		defw OPT4, SEL4
		; defw OPT5, SEL5
		; defw OPT6, SEL6
		; defw OPT7, SEL7
		
		
; ------- messages
; -- option text
; byte - number of choises
; byte - address in NVRAM
; byte - X coordinate
; byte - Y coordinate
; text - option
; byte - 0
OPT0:	defb 3, cfrq, 0, 0, 'CPU frequency, MHz:', 0
OPT1:	defb 8, btto, 0, 0, 'Boot to:', 0
OPT2:	defb 4, l128, 0, 0, '128k Lock:', 0
OPT3:	defb 4, ayfr, 0, 0, 'AY frequency, MHz:', 0
OPT4:	defb 7, zpal, 0, 0, 'ZX Palette:', 0
; OPT5:	defb 0, h'B0, 0, 0, '', 0
; OPT6:	defb 0, h'B0, 0, 0, '', 0
; OPT7:	defb 0, h'B0, 0, 0, '', 0

; -- choises
; *repeat n times
; text - choise
; byte - 0
SEL0:	defb '7.0', 0
		defb '14.0', 0
		defb '3.5', 0
		
SEL1:	defb 'TR-DOS', 0
		defb 'Basic 48k', 0
		defb 'Basic 128k', 0
		defb 'SD: boot.c$', 0
		defb 'SD: system.rom', 0
		defb 'RS-232', 0
		defb 'Custom ROM (page #04-07)', 0
		defb 'Custom RAM (page #F8-FB)', 0
		
SEL2:	defb 'ON', 0
		defb 'OFF', 0
		defb 'Auto (boleq)', 0
		defb 'Auto (lvd)', 0
		
SEL3:	defb '1.75', 0
		defb '1.7733', 0
		defb '3.5', 0
		defb '3.546', 0
		
SEL4:	defb 'Pulsar', 0
		defb 'Bright black', 0
		defb 'Dim', 0
		defb 'Pale', 0
		defb 'Dark', 0
		defb 'Black and white', 0
		defb 'Custom', 0
		
; SEL5:	defb '', 0
		; defb '', 0
		
; SEL6:	defb '', 0
		; defb '', 0
		
; SEL7:	defb '', 0
		; defb '', 0
        
        end
		
